; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29914.0 

	TITLE	E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Debug\Controller.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??0Vec2i@@QAE@HI@Z				; Vec2i::Vec2i
PUBLIC	??0Vec3f@@QAE@MMM@Z				; Vec3f::Vec3f
PUBLIC	?Length@Vec3f@@QBEMXZ				; Vec3f::Length
PUBLIC	??D@YA?AUVec3f@@ABU0@M@Z			; operator*
PUBLIC	??1String@@QAE@XZ				; String::~String
PUBLIC	??0String@@QAE@I@Z				; String::String
PUBLIC	??0String@@QAE@M@Z				; String::String
PUBLIC	??0String@@QAE@PBD@Z				; String::String
PUBLIC	?Matrix@Camera@@QAEAAVMatrix4@@XZ		; Camera::Matrix
PUBLIC	?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z ; D3D9VertexShader::SetMatrix
PUBLIC	?FPS@FrameTimer@@QAEMXZ				; FrameTimer::FPS
PUBLIC	?SPF@FrameTimer@@QAEMXZ				; FrameTimer::SPF
PUBLIC	?MenuBar@MenuInterface@@QAEAAVMenu@@XZ		; MenuInterface::MenuBar
PUBLIC	?KeyCheckOnce@InputManager@@QAE_NI@Z		; InputManager::KeyCheckOnce
PUBLIC	?EventPresent@InputManager@@QBE_NXZ		; InputManager::EventPresent
PUBLIC	?PopEvent@InputManager@@QAE?AUInputEvent@@XZ	; InputManager::PopEvent
PUBLIC	?Length@?$Vector@UInputEvent@@@@QBEIXZ		; Vector<InputEvent>::Length
PUBLIC	?First@?$Vector@UInputEvent@@@@QAEAAUInputEvent@@XZ ; Vector<InputEvent>::First
PUBLIC	?PopFront@?$Vector@UInputEvent@@@@QAEXXZ	; Vector<InputEvent>::PopFront
PUBLIC	?RemoveSlow@?$Vector@UInputEvent@@@@QAEXI@Z	; Vector<InputEvent>::RemoveSlow
PUBLIC	??1?$Vector@UVec3f@@@@QAE@XZ			; Vector<Vec3f>::~Vector<Vec3f>
PUBLIC	??1?$Vector@UTriMeshFace@@@@QAE@XZ		; Vector<TriMeshFace>::~Vector<TriMeshFace>
PUBLIC	??1IsoSurface@@QAE@XZ				; IsoSurface::~IsoSurface
PUBLIC	?Init@Controller@@QAEXAAUAppState@@@Z		; Controller::Init
PUBLIC	?Init3D@Controller@@QAEXXZ			; Controller::Init3D
PUBLIC	?FreeMemory@Controller@@QAEXXZ			; Controller::FreeMemory
PUBLIC	?ReSize@Controller@@QAEXXZ			; Controller::ReSize
PUBLIC	?ReleaseAssets@Controller@@UAEXXZ		; Controller::ReleaseAssets
PUBLIC	?ResetAssets@Controller@@UAEXXZ			; Controller::ResetAssets
PUBLIC	?Frame@Controller@@QAEXXZ			; Controller::Frame
PUBLIC	?InitMenu@Controller@@AAEXXZ			; Controller::InitMenu
PUBLIC	?InitAssets@Controller@@AAEXXZ			; Controller::InitAssets
PUBLIC	?ReloadTextures@Controller@@AAEXXZ		; Controller::ReloadTextures
PUBLIC	?ProcessEvents@Controller@@AAEXXZ		; Controller::ProcessEvents
PUBLIC	?ProcessKeyboardInput@Controller@@AAEXXZ	; Controller::ProcessKeyboardInput
PUBLIC	?ResetCamera@Controller@@AAEXXZ			; Controller::ResetCamera
PUBLIC	?UpdateCamera@Controller@@AAEXXZ		; Controller::UpdateCamera
PUBLIC	?StatusText@Controller@@AAEXXZ			; Controller::StatusText
PUBLIC	?Status@Controller@@AAEXABVString@@URGBColor@@@Z ; Controller::Status
PUBLIC	?UpdateIsoSurface@Controller@@AAEXXZ		; Controller::UpdateIsoSurface
PUBLIC	?Render@Controller@@AAEXXZ			; Controller::Render
PUBLIC	?Reserve@?$Vector@PAVGraphicsAsset@@@@QAEXI@Z	; Vector<GraphicsAsset *>::Reserve
PUBLIC	??A?$Vector@PAVGraphicsAsset@@@@QAEAAPAVGraphicsAsset@@I@Z ; Vector<GraphicsAsset *>::operator[]
PUBLIC	?Length@?$Vector@PAVGraphicsAsset@@@@QBEIXZ	; Vector<GraphicsAsset *>::Length
PUBLIC	?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z ; Vector<GraphicsAsset *>::PushEnd
PUBLIC	?SphereFunction@@YAMABUVec3f@@@Z		; SphereFunction
PUBLIC	?RandomFunction@@YAMABUVec3f@@@Z		; RandomFunction
PUBLIC	?CrazyFunction@@YAMABUVec3f@@@Z			; CrazyFunction
PUBLIC	??_C@_0DG@DCLAMPEF@?5has?5unexpectedly?5failed?$DL?5the?5p@ ; `string'
PUBLIC	??_C@_09PLEIBEEM@SetMatrix@			; `string'
PUBLIC	??_C@_0O@NLJFDGCI@The?5function?5@		; `string'
PUBLIC	??_C@_0BH@EBGNBOLA@Menu?5bar?5uninitialized@	; `string'
PUBLIC	??_C@_0M@MAFAMAL@Invalid?5key@			; `string'
PUBLIC	??_C@_0BO@LAHPIJGE@First?5called?5with?5no?5elements@ ; `string'
PUBLIC	??_C@_0BM@NAGFIGAN@Out?9of?9bounds?5vector?5access@ ; `string'
PUBLIC	??_C@_0BP@NEAPEIHG@Remove?5called?5on?5invalid?5index@ ; `string'
PUBLIC	??_C@_04PBAHLACE@File@				; `string'
PUBLIC	??_C@_0M@LDHJGJDJ@Quit?7Ctrl?$CLQ@		; `string'
PUBLIC	??_C@_07EHHHOIHI@Verdana@			; `string'
PUBLIC	??_C@_0BG@HFPCFDKL@Assets?2NormalColor?4ps@	; `string'
PUBLIC	??_C@_0BG@HBHPCPBJ@Assets?2NormalColor?4vs@	; `string'
PUBLIC	??_C@_05MKOPJMEO@FPS?3?5@			; `string'
PUBLIC	??_C@_0CH@DAMOGEK@?5?$CIuse?5number?5keys?5to?5switch?5fun@ ; `string'
PUBLIC	??_C@_03NIBMKKKC@?5?1?5@			; `string'
PUBLIC	??_C@_09PKMDPNDD@Function?5@			; `string'
PUBLIC	??_C@_0O@CLELCCCL@WorldViewProj@		; `string'
PUBLIC	??_C@_05MFLOHCHP@World@				; `string'
PUBLIC	__real@3c23d70a
PUBLIC	__real@3ccccccd
PUBLIC	__real@3f800000
PUBLIC	__real@3f860a92
PUBLIC	__real@3fa00000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40a00000
PUBLIC	__real@41200000
PUBLIC	__real@43480000
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__AllocConsole@0:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	?Assert@@YAX_NPBD@Z:PROC			; Assert
EXTRN	?SignalError@@YAXPBD@Z:PROC			; SignalError
EXTRN	?SignalError@@YAXABVString@@@Z:PROC		; SignalError
EXTRN	??4String@@QAEAAV0@PBD@Z:PROC			; String::operator=
EXTRN	??4String@@QAEAAV0@M@Z:PROC			; String::operator=
EXTRN	??4String@@QAEAAV0@I@Z:PROC			; String::operator=
EXTRN	??H@YA?AVString@@ABV0@0@Z:PROC			; operator+
EXTRN	??4Matrix4@@QAEAAV0@ABV0@@Z:PROC		; Matrix4::operator=
EXTRN	??BMatrix4@@QBE?AUD3DXMATRIX@@XZ:PROC		; Matrix4::operator D3DXMATRIX
EXTRN	?Identity@Matrix4@@SA?AV1@XZ:PROC		; Matrix4::Identity
EXTRN	?PerspectiveFov@Matrix4@@SA?AV1@MMMM@Z:PROC	; Matrix4::PerspectiveFov
EXTRN	??D@YA?AVMatrix4@@ABV0@0@Z:PROC			; operator*
EXTRN	??0Bitmap@@QAE@II@Z:PROC			; Bitmap::Bitmap
EXTRN	??1Bitmap@@QAE@XZ:PROC				; Bitmap::~Bitmap
EXTRN	?Clear@Bitmap@@QAEXABURGBColor@@@Z:PROC		; Bitmap::Clear
EXTRN	?Reset@Camera@@QAEXABUVec3f@@00@Z:PROC		; Camera::Reset
EXTRN	?Update@Camera@@QAEXXZ:PROC			; Camera::Update
EXTRN	?KeyboardWASD@Camera@@QAEXAAVInputManager@@M@Z:PROC ; Camera::KeyboardWASD
EXTRN	?KeyboardNumpad@Camera@@QAEXAAVInputManager@@M@Z:PROC ; Camera::KeyboardNumpad
EXTRN	?SetGD@BaseMesh@@QAEXAAVGraphicsDevice@@@Z:PROC	; BaseMesh::SetGD
EXTRN	?Init@D3D9PixelShader@@QAEXAAVGraphicsDevice@@ABVString@@@Z:PROC ; D3D9PixelShader::Init
EXTRN	?Set@D3D9PixelShader@@QAEXXZ:PROC		; D3D9PixelShader::Set
EXTRN	?Init@D3D9VertexShader@@QAEXAAVGraphicsDevice@@ABVString@@@Z:PROC ; D3D9VertexShader::Init
EXTRN	?Set@D3D9VertexShader@@QAEXXZ:PROC		; D3D9VertexShader::Set
EXTRN	?Init@D3D9Font@@QAEXAAVGraphicsDevice@@ABVString@@HH@Z:PROC ; D3D9Font::Init
EXTRN	?DrawString@D3D9Font@@QBEXABVString@@ABUVec2i@@URGBColor@@@Z:PROC ; D3D9Font::DrawString
EXTRN	?AddSubMenu@Menu@@QAEAAV1@AAVApplicationWindow@@IABVString@@@Z:PROC ; Menu::AddSubMenu
EXTRN	?AddString@Menu@@QAEXAAVApplicationWindow@@IABVString@@@Z:PROC ; Menu::AddString
EXTRN	?Init@MenuInterface@@QAEXAAVApplicationWindow@@@Z:PROC ; MenuInterface::Init
EXTRN	?DispatchKeyboardShortcuts@MenuInterface@@QAEXAAVInputManager@@@Z:PROC ; MenuInterface::DispatchKeyboardShortcuts
EXTRN	?AspectRatio@ApplicationWindow@@QAEMXZ:PROC	; ApplicationWindow::AspectRatio
EXTRN	??0IsoSurface@@QAE@XZ:PROC			; IsoSurface::IsoSurface
EXTRN	?IsoApproximate@IsoSurface@@QAEXMMAAVBaseMesh@@P6AMABUVec3f@@@Z@Z:PROC ; IsoSurface::IsoApproximate
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?White@RGBColor@@2U1@B:DWORD			; RGBColor::White
EXTRN	?Red@RGBColor@@2U1@B:DWORD			; RGBColor::Red
EXTRN	?Yellow@RGBColor@@2U1@B:DWORD			; RGBColor::Yellow
EXTRN	?Origin@Vec3f@@2U1@B:BYTE			; Vec3f::Origin
EXTRN	?eZ@Vec3f@@2U1@B:BYTE				; Vec3f::eZ
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fa00000
CONST	SEGMENT
__real@3fa00000 DD 03fa00000r			; 1.25
CONST	ENDS
;	COMDAT __real@3f860a92
CONST	SEGMENT
__real@3f860a92 DD 03f860a92r			; 1.0472
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3ccccccd
CONST	SEGMENT
__real@3ccccccd DD 03ccccccdr			; 0.025
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_05MFLOHCHP@World@
CONST	SEGMENT
??_C@_05MFLOHCHP@World@ DB 'World', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CLELCCCL@WorldViewProj@
CONST	SEGMENT
??_C@_0O@CLELCCCL@WorldViewProj@ DB 'WorldViewProj', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PKMDPNDD@Function?5@
CONST	SEGMENT
??_C@_09PKMDPNDD@Function?5@ DB 'Function ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIBMKKKC@?5?1?5@
CONST	SEGMENT
??_C@_03NIBMKKKC@?5?1?5@ DB ' / ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DAMOGEK@?5?$CIuse?5number?5keys?5to?5switch?5fun@
CONST	SEGMENT
??_C@_0CH@DAMOGEK@?5?$CIuse?5number?5keys?5to?5switch?5fun@ DB ' (use num'
	DB	'ber keys to switch functions)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MKOPJMEO@FPS?3?5@
CONST	SEGMENT
??_C@_05MKOPJMEO@FPS?3?5@ DB 'FPS: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HBHPCPBJ@Assets?2NormalColor?4vs@
CONST	SEGMENT
??_C@_0BG@HBHPCPBJ@Assets?2NormalColor?4vs@ DB 'Assets\NormalColor.vs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HFPCFDKL@Assets?2NormalColor?4ps@
CONST	SEGMENT
??_C@_0BG@HFPCFDKL@Assets?2NormalColor?4ps@ DB 'Assets\NormalColor.ps', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EHHHOIHI@Verdana@
CONST	SEGMENT
??_C@_07EHHHOIHI@Verdana@ DB 'Verdana', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LDHJGJDJ@Quit?7Ctrl?$CLQ@
CONST	SEGMENT
??_C@_0M@LDHJGJDJ@Quit?7Ctrl?$CLQ@ DB 'Quit', 09H, 'Ctrl+Q', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04PBAHLACE@File@
CONST	SEGMENT
??_C@_04PBAHLACE@File@ DB 'File', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEAPEIHG@Remove?5called?5on?5invalid?5index@
CONST	SEGMENT
??_C@_0BP@NEAPEIHG@Remove?5called?5on?5invalid?5index@ DB 'Remove called '
	DB	'on invalid index', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NAGFIGAN@Out?9of?9bounds?5vector?5access@
CONST	SEGMENT
??_C@_0BM@NAGFIGAN@Out?9of?9bounds?5vector?5access@ DB 'Out-of-bounds vec'
	DB	'tor access', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LAHPIJGE@First?5called?5with?5no?5elements@
CONST	SEGMENT
??_C@_0BO@LAHPIJGE@First?5called?5with?5no?5elements@ DB 'First called wi'
	DB	'th no elements', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MAFAMAL@Invalid?5key@
CONST	SEGMENT
??_C@_0M@MAFAMAL@Invalid?5key@ DB 'Invalid key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EBGNBOLA@Menu?5bar?5uninitialized@
CONST	SEGMENT
??_C@_0BH@EBGNBOLA@Menu?5bar?5uninitialized@ DB 'Menu bar uninitialized', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NLJFDGCI@The?5function?5@
CONST	SEGMENT
??_C@_0O@NLJFDGCI@The?5function?5@ DB 'The function ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PLEIBEEM@SetMatrix@
CONST	SEGMENT
??_C@_09PLEIBEEM@SetMatrix@ DB 'SetMatrix', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DCLAMPEF@?5has?5unexpectedly?5failed?$DL?5the?5p@
CONST	SEGMENT
??_C@_0DG@DCLAMPEF@?5has?5unexpectedly?5failed?$DL?5the?5p@ DB ' has unex'
	DB	'pectedly failed; the program will now abort.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateIsoSurface@Controller@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateIsoSurface@Controller@@AAEXXZ$0
__ehfuncinfo$?UpdateIsoSurface@Controller@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdateIsoSurface@Controller@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?StatusText@Controller@@AAEXXZ DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?StatusText@Controller@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?StatusText@Controller@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?StatusText@Controller@@AAEXXZ$11
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ReloadTextures@Controller@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReloadTextures@Controller@@AAEXXZ$0
__ehfuncinfo$?ReloadTextures@Controller@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReloadTextures@Controller@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitAssets@Controller@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitAssets@Controller@@AAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitAssets@Controller@@AAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitAssets@Controller@@AAEXXZ$2
__ehfuncinfo$?InitAssets@Controller@@AAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InitAssets@Controller@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitMenu@Controller@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitMenu@Controller@@AAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitMenu@Controller@@AAEXXZ$1
__ehfuncinfo$?InitMenu@Controller@@AAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitMenu@Controller@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$4
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CrazyFunction@@YAMABUVec3f@@@Z
_TEXT	SEGMENT
tv154 = -244						; size = 4
tv152 = -240						; size = 4
tv161 = -236						; size = 4
tv146 = -232						; size = 4
tv159 = -228						; size = 4
tv140 = -224						; size = 4
tv157 = -220						; size = 4
tv134 = -216						; size = 4
_P$ = -16						; size = 12
_Pos$ = 8						; size = 4
?CrazyFunction@@YAMABUVec3f@@@Z PROC			; CrazyFunction, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 24
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _P$[ebp]
	push	ecx
	call	??D@YA?AUVec3f@@ABU0@M@Z		; operator*
	add	esp, 12					; 0000000cH
; Line 25
	movss	xmm0, DWORD PTR _P$[ebp]
	mulss	xmm0, DWORD PTR _P$[ebp+4]
	movss	xmm1, DWORD PTR _P$[ebp]
	mulss	xmm1, DWORD PTR _P$[ebp+8]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _P$[ebp+4]
	mulss	xmm1, DWORD PTR _P$[ebp+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	movss	xmm1, DWORD PTR _P$[ebp]
	mulss	xmm1, DWORD PTR _P$[ebp+4]
	push	ecx
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv157[ebp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR tv140[ebp]
	movss	xmm0, DWORD PTR tv157[ebp]
	addss	xmm0, DWORD PTR tv140[ebp]
	movss	xmm1, DWORD PTR _P$[ebp+4]
	mulss	xmm1, DWORD PTR _P$[ebp+8]
	push	ecx
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv159[ebp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR tv146[ebp]
	movss	xmm0, DWORD PTR tv159[ebp]
	addss	xmm0, DWORD PTR tv146[ebp]
	movss	xmm1, DWORD PTR _P$[ebp]
	mulss	xmm1, DWORD PTR _P$[ebp+8]
	push	ecx
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv161[ebp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR tv152[ebp]
	movss	xmm0, DWORD PTR tv161[ebp]
	addss	xmm0, DWORD PTR tv152[ebp]
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv154[ebp], xmm0
	fld	DWORD PTR tv154[ebp]
; Line 26
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CrazyFunct
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@CrazyFunct:
	DD	1
	DD	$LN4@CrazyFunct
$LN4@CrazyFunct:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@CrazyFunct
$LN3@CrazyFunct:
	DB	80					; 00000050H
	DB	0
?CrazyFunction@@YAMABUVec3f@@@Z ENDP			; CrazyFunction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RandomFunction@@YAMABUVec3f@@@Z
_TEXT	SEGMENT
tv133 = -228						; size = 4
tv131 = -224						; size = 4
tv136 = -220						; size = 4
tv91 = -216						; size = 4
_P$ = -16						; size = 12
_Pos$ = 8						; size = 4
?RandomFunction@@YAMABUVec3f@@@Z PROC			; RandomFunction, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 18
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _P$[ebp]
	push	ecx
	call	??D@YA?AUVec3f@@ABU0@M@Z		; operator*
	add	esp, 12					; 0000000cH
; Line 19
	lea	ecx, DWORD PTR _P$[ebp]
	call	?Length@Vec3f@@QBEMXZ			; Vec3f::Length
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR tv91[ebp]
	movss	xmm0, DWORD PTR tv91[ebp]
	mulss	xmm0, DWORD PTR _P$[ebp]
	lea	ecx, DWORD PTR _P$[ebp]
	movss	DWORD PTR tv136[ebp], xmm0
	call	?Length@Vec3f@@QBEMXZ			; Vec3f::Length
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR tv131[ebp]
	movss	xmm0, DWORD PTR tv131[ebp]
	mulss	xmm0, DWORD PTR _P$[ebp+4]
	movss	xmm1, DWORD PTR tv136[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv133[ebp], xmm1
	fld	DWORD PTR tv133[ebp]
; Line 20
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@RandomFunc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@RandomFunc:
	DD	1
	DD	$LN4@RandomFunc
$LN4@RandomFunc:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@RandomFunc
$LN3@RandomFunc:
	DB	80					; 00000050H
	DB	0
?RandomFunction@@YAMABUVec3f@@@Z ENDP			; RandomFunction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SphereFunction@@YAMABUVec3f@@@Z
_TEXT	SEGMENT
tv86 = -196						; size = 4
_Pos$ = 8						; size = 4
?SphereFunction@@YAMABUVec3f@@@Z PROC			; SphereFunction, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 13
	mov	eax, DWORD PTR _Pos$[ebp]
	mov	ecx, DWORD PTR _Pos$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _Pos$[ebp]
	mov	eax, DWORD PTR _Pos$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _Pos$[ebp]
	mov	edx, DWORD PTR _Pos$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv86[ebp], xmm0
	fld	DWORD PTR tv86[ebp]
; Line 14
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SphereFunction@@YAMABUVec3f@@@Z ENDP			; SphereFunction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z PROC ; Vector<GraphicsAsset *>::PushEnd, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.cpp
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jb	SHORT $LN2@PushEnd
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [ecx+ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reserve@?$Vector@PAVGraphicsAsset@@@@QAEXI@Z ; Vector<GraphicsAsset *>::Reserve
$LN2@PushEnd:
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z ENDP ; Vector<GraphicsAsset *>::PushEnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Length@?$Vector@PAVGraphicsAsset@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Length@?$Vector@PAVGraphicsAsset@@@@QBEIXZ PROC	; Vector<GraphicsAsset *>::Length, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@?$Vector@PAVGraphicsAsset@@@@QBEIXZ ENDP	; Vector<GraphicsAsset *>::Length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$Vector@PAVGraphicsAsset@@@@QAEAAPAVGraphicsAsset@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_k$ = 8							; size = 4
??A?$Vector@PAVGraphicsAsset@@@@QAEAAPAVGraphicsAsset@@I@Z PROC ; Vector<GraphicsAsset *>::operator[], COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN2@operator
; Line 238
	push	OFFSET ??_C@_0BM@NAGFIGAN@Out?9of?9bounds?5vector?5access@
	call	?SignalError@@YAXPBD@Z			; SignalError
	add	esp, 4
$LN2@operator:
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _k$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 242
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$Vector@PAVGraphicsAsset@@@@QAEAAPAVGraphicsAsset@@I@Z ENDP ; Vector<GraphicsAsset *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reserve@?$Vector@PAVGraphicsAsset@@@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -260						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 4
_index$4 = -32						; size = 4
_NewData$5 = -20					; size = 4
_this$ = -8						; size = 4
_Size$ = 8						; size = 4
?Reserve@?$Vector@PAVGraphicsAsset@@@@QAEXI@Z PROC	; Vector<GraphicsAsset *>::Reserve, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Size$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	$LN1@Reserve
; Line 215
	xor	ecx, ecx
	mov	eax, DWORD PTR _Size$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _NewData$5[ebp], eax
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Reserve
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _NewData$5[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 219
	mov	DWORD PTR _index$4[ebp], 0
	jmp	SHORT $LN4@Reserve
$LN2@Reserve:
	mov	eax, DWORD PTR _index$4[ebp]
	add	eax, 1
	mov	DWORD PTR _index$4[ebp], eax
$LN4@Reserve:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$4[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Reserve
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$4[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
; Line 222
	jmp	SHORT $LN2@Reserve
$LN3@Reserve:
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@Reserve:
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _NewData$5[ebp]
	mov	DWORD PTR [eax], ecx
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Size$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Reserve:
; Line 228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reserve@?$Vector@PAVGraphicsAsset@@@@QAEXI@Z ENDP	; Vector<GraphicsAsset *>::Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Render@Controller@@AAEXXZ
_TEXT	SEGMENT
$T1 = -348						; size = 64
_viewProj$ = -84					; size = 64
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Render@Controller@@AAEXXZ PROC				; Controller::Render, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 236				; 000000ecH
	call	?Set@D3D9VertexShader@@QAEXXZ		; D3D9VertexShader::Set
; Line 192
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?Set@D3D9PixelShader@@QAEXXZ		; D3D9PixelShader::Set
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?Matrix@Camera@@QAEAAVMatrix4@@XZ	; Camera::Matrix
	push	eax
	lea	ecx, DWORD PTR _viewProj$[ebp]
	push	ecx
	call	??D@YA?AVMatrix4@@ABV0@0@Z		; operator*
	add	esp, 12					; 0000000cH
; Line 195
	lea	eax, DWORD PTR _viewProj$[ebp]
	push	eax
	push	OFFSET ??_C@_0O@CLELCCCL@WorldViewProj@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 236				; 000000ecH
	call	?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z ; D3D9VertexShader::SetMatrix
; Line 196
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?Identity@Matrix4@@SA?AV1@XZ		; Matrix4::Identity
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05MFLOHCHP@World@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 236				; 000000ecH
	call	?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z ; D3D9VertexShader::SetMatrix
; Line 198
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 300				; 0000012cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+300]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Render
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Render:
	DD	1
	DD	$LN4@Render
$LN4@Render:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN3@Render
$LN3@Render:
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	106					; 0000006aH
	DB	0
?Render@Controller@@AAEXXZ ENDP				; Controller::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateIsoSurface@Controller@@AAEXXZ
_TEXT	SEGMENT
_surfaceGenerator$ = -416				; size = 384
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?UpdateIsoSurface@Controller@@AAEXXZ PROC		; Controller::UpdateIsoSurface, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateIsoSurface@Controller@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 600				; 00000258H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-612]
	mov	ecx, 150				; 00000096H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	lea	ecx, DWORD PTR _surfaceGenerator$[ebp]
	call	??0IsoSurface@@QAE@XZ			; IsoSurface::IsoSurface
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+332]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 300				; 0000012cH
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3ccccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _surfaceGenerator$[ebp]
	call	?IsoApproximate@IsoSurface@@QAEXMMAAVBaseMesh@@P6AMABUVec3f@@@Z@Z ; IsoSurface::IsoApproximate
; Line 102
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _surfaceGenerator$[ebp]
	call	??1IsoSurface@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@UpdateIsoS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 612				; 00000264H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@UpdateIsoS:
	DD	1
	DD	$LN6@UpdateIsoS
$LN6@UpdateIsoS:
	DD	-416					; fffffe60H
	DD	384					; 00000180H
	DD	$LN4@UpdateIsoS
$LN4@UpdateIsoS:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	71					; 00000047H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateIsoSurface@Controller@@AAEXXZ$0:
	lea	ecx, DWORD PTR _surfaceGenerator$[ebp]
	jmp	??1IsoSurface@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?UpdateIsoSurface@Controller@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-616]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateIsoSurface@Controller@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateIsoSurface@Controller@@AAEXXZ ENDP		; Controller::UpdateIsoSurface
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Status@Controller@@AAEXABVString@@URGBColor@@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Status@Controller@@AAEXABVString@@URGBColor@@@Z PROC	; Controller::Status, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+200]
	push	edx
	push	2
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vec2i@@QAE@HI@Z			; Vec2i::Vec2i
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?DrawString@D3D9Font@@QBEXABVString@@ABUVec2i@@URGBColor@@@Z ; D3D9Font::DrawString
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	add	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Status@Controller@@AAEXABVString@@URGBColor@@@Z ENDP	; Controller::Status
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?StatusText@Controller@@AAEXXZ
_TEXT	SEGMENT
tv195 = -520						; size = 4
tv205 = -516						; size = 4
tv193 = -512						; size = 4
tv204 = -508						; size = 4
tv191 = -504						; size = 4
tv203 = -500						; size = 4
tv189 = -496						; size = 4
tv202 = -492						; size = 4
tv187 = -488						; size = 4
tv201 = -484						; size = 4
tv185 = -480						; size = 4
tv178 = -480						; size = 4
tv200 = -476						; size = 4
tv198 = -476						; size = 4
tv183 = -472						; size = 4
tv176 = -472						; size = 4
tv199 = -468						; size = 4
tv197 = -468						; size = 4
tv181 = -464						; size = 4
tv174 = -464						; size = 4
tv196 = -460						; size = 4
tv138 = -460						; size = 4
$T2 = -452						; size = 12
$T3 = -432						; size = 12
$T4 = -412						; size = 12
$T5 = -392						; size = 12
$T6 = -372						; size = 12
$T7 = -352						; size = 12
$T8 = -332						; size = 12
$T9 = -312						; size = 12
$T10 = -292						; size = 12
$T11 = -272						; size = 12
$T12 = -252						; size = 12
$T13 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?StatusText@Controller@@AAEXXZ PROC			; Controller::StatusText, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 183
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StatusText@Controller@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+200], 2
; Line 185
	mov	eax, DWORD PTR ?Red@RGBColor@@2U1@B	; RGBColor::Red
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 8
	call	?FPS@FrameTimer@@QAEMXZ			; FrameTimer::FPS
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T13[ebp]
	call	??0String@@QAE@M@Z			; String::String
	mov	DWORD PTR tv196[ebp], eax
	mov	edx, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv174[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv174[ebp]
	push	eax
	push	OFFSET ??_C@_05MKOPJMEO@FPS?3?5@
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR tv197[ebp], eax
	mov	ecx, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv176[ebp]
	push	edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv198[ebp], eax
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv178[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Status@Controller@@AAEXABVString@@URGBColor@@@Z ; Controller::Status
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 186
	push	OFFSET ??_C@_03NIBMKKKC@?5?1?5@
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR ?Yellow@RGBColor@@2U1@B	; RGBColor::Yellow
	push	eax
	push	OFFSET ??_C@_0CH@DAMOGEK@?5?$CIuse?5number?5keys?5to?5switch?5fun@
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv181[ebp]
	push	edx
	push	3
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0String@@QAE@I@Z			; String::String
	mov	DWORD PTR tv199[ebp], eax
	mov	eax, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv183[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv183[ebp]
	push	ecx
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0String@@QAE@I@Z			; String::String
	mov	DWORD PTR tv200[ebp], eax
	mov	edx, DWORD PTR tv200[ebp]
	mov	DWORD PTR tv185[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv185[ebp]
	push	eax
	push	OFFSET ??_C@_09PKMDPNDD@Function?5@
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR tv201[ebp], eax
	mov	ecx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv187[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv187[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv202[ebp], eax
	mov	ecx, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv189[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv191[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv191[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR tv204[ebp]
	mov	DWORD PTR tv193[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv193[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv205[ebp], eax
	mov	ecx, DWORD PTR tv205[ebp]
	mov	DWORD PTR tv195[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv195[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Status@Controller@@AAEXABVString@@URGBColor@@@Z ; Controller::Status
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 187
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StatusText@Controller@@AAEXXZ$0:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$1:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$2:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$3:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$4:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$5:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$6:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$7:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$8:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$9:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$10:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?StatusText@Controller@@AAEXXZ$11:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?StatusText@Controller@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StatusText@Controller@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?StatusText@Controller@@AAEXXZ ENDP			; Controller::StatusText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateCamera@Controller@@AAEXXZ
_TEXT	SEGMENT
tv95 = -208						; size = 4
_this$ = -8						; size = 4
?UpdateCamera@Controller@@AAEXXZ PROC			; Controller::UpdateCamera, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 8
	call	?SPF@FrameTimer@@QAEMXZ			; FrameTimer::SPF
	fstp	DWORD PTR tv95[ebp]
	movss	xmm0, DWORD PTR tv95[ebp]
	mulss	xmm0, DWORD PTR __real@40a00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 120				; 00000078H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?KeyboardWASD@Camera@@QAEXAAVInputManager@@M@Z ; Camera::KeyboardWASD
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 8
	call	?SPF@FrameTimer@@QAEMXZ			; FrameTimer::SPF
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 120				; 00000078H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?KeyboardNumpad@Camera@@QAEXAAVInputManager@@M@Z ; Camera::KeyboardNumpad
; Line 150
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?Update@Camera@@QAEXXZ			; Camera::Update
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateCamera@Controller@@AAEXXZ ENDP			; Controller::UpdateCamera
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ResetCamera@Controller@@AAEXXZ
_TEXT	SEGMENT
$T1 = -220						; size = 12
_this$ = -8						; size = 4
?ResetCamera@Controller@@AAEXXZ PROC			; Controller::ResetCamera, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	push	OFFSET ?Origin@Vec3f@@2U1@B		; Vec3f::Origin
	push	OFFSET ?eZ@Vec3f@@2U1@B			; Vec3f::eZ
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vec3f@@QAE@MMM@Z			; Vec3f::Vec3f
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?Reset@Camera@@QAEXABUVec3f@@00@Z	; Camera::Reset
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetCamera@Controller@@AAEXXZ ENDP			; Controller::ResetCamera
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ProcessKeyboardInput@Controller@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ProcessKeyboardInput@Controller@@AAEXXZ PROC		; Controller::ProcessKeyboardInput, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	push	70					; 00000046H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 120				; 00000078H
	call	?KeyCheckOnce@InputManager@@QAE_NI@Z	; InputManager::KeyCheckOnce
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ProcessKey
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ProcessKey:
; Line 159
	push	49					; 00000031H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 120				; 00000078H
	call	?KeyCheckOnce@InputManager@@QAE_NI@Z	; InputManager::KeyCheckOnce
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@ProcessKey
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 0
; Line 162
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateIsoSurface@Controller@@AAEXXZ	; Controller::UpdateIsoSurface
$LN3@ProcessKey:
; Line 164
	push	50					; 00000032H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 120				; 00000078H
	call	?KeyCheckOnce@InputManager@@QAE_NI@Z	; InputManager::KeyCheckOnce
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ProcessKey
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 1
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateIsoSurface@Controller@@AAEXXZ	; Controller::UpdateIsoSurface
$LN4@ProcessKey:
; Line 169
	push	51					; 00000033H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 120				; 00000078H
	call	?KeyCheckOnce@InputManager@@QAE_NI@Z	; InputManager::KeyCheckOnce
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ProcessKey
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 2
; Line 172
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateIsoSurface@Controller@@AAEXXZ	; Controller::UpdateIsoSurface
$LN1@ProcessKey:
; Line 174
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ProcessKeyboardInput@Controller@@AAEXXZ ENDP		; Controller::ProcessKeyboardInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ProcessEvents@Controller@@AAEXXZ
_TEXT	SEGMENT
tv80 = -224						; size = 4
_CurEvent$1 = -24					; size = 8
_this$ = -8						; size = 4
?ProcessEvents@Controller@@AAEXXZ PROC			; Controller::ProcessEvents, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 120				; 00000078H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DispatchKeyboardShortcuts@MenuInterface@@QAEXAAVInputManager@@@Z ; MenuInterface::DispatchKeyboardShortcuts
$LN2@ProcessEve:
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 120				; 00000078H
	call	?EventPresent@InputManager@@QBE_NXZ	; InputManager::EventPresent
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ProcessEve
; Line 53
	lea	eax, DWORD PTR _CurEvent$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 120				; 00000078H
	call	?PopEvent@InputManager@@QAE?AUInputEvent@@XZ ; InputManager::PopEvent
; Line 54
	cmp	DWORD PTR _CurEvent$1[ebp], 0
	jne	SHORT $LN6@ProcessEve
; Line 56
	mov	eax, DWORD PTR _CurEvent$1[ebp+4]
	mov	DWORD PTR tv80[ebp], eax
	cmp	DWORD PTR tv80[ebp], 1
	je	SHORT $LN7@ProcessEve
	jmp	SHORT $LN6@ProcessEve
$LN7@ProcessEve:
; Line 59
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@ProcessEve:
; Line 63
	jmp	SHORT $LN2@ProcessEve
$LN1@ProcessEve:
; Line 64
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@ProcessEve
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@ProcessEve:
	DD	1
	DD	$LN10@ProcessEve
$LN10@ProcessEve:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN9@ProcessEve
$LN9@ProcessEve:
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	69					; 00000045H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?ProcessEvents@Controller@@AAEXXZ ENDP			; Controller::ProcessEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReloadTextures@Controller@@AAEXXZ
_TEXT	SEGMENT
_white$ = -40						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReloadTextures@Controller@@AAEXXZ PROC			; Controller::ReloadTextures, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 141
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReloadTextures@Controller@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	2
	push	2
	lea	ecx, DWORD PTR _white$[ebp]
	call	??0Bitmap@@QAE@II@Z			; Bitmap::Bitmap
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	push	OFFSET ?White@RGBColor@@2U1@B		; RGBColor::White
	lea	ecx, DWORD PTR _white$[ebp]
	call	?Clear@Bitmap@@QAEXABURGBColor@@@Z	; Bitmap::Clear
; Line 144
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _white$[ebp]
	call	??1Bitmap@@QAE@XZ			; Bitmap::~Bitmap
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ReloadText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@ReloadText:
	DD	1
	DD	$LN6@ReloadText
$LN6@ReloadText:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN4@ReloadText
$LN4@ReloadText:
	DB	119					; 00000077H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ReloadTextures@Controller@@AAEXXZ$0:
	lea	ecx, DWORD PTR _white$[ebp]
	jmp	??1Bitmap@@QAE@XZ			; Bitmap::~Bitmap
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?ReloadTextures@Controller@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReloadTextures@Controller@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReloadTextures@Controller@@AAEXXZ ENDP			; Controller::ReloadTextures
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InitAssets@Controller@@AAEXXZ
_TEXT	SEGMENT
$T2 = -308						; size = 4
$T3 = -296						; size = 4
$T4 = -284						; size = 4
$T5 = -272						; size = 12
$T6 = -252						; size = 12
$T7 = -232						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InitAssets@Controller@@AAEXXZ PROC			; Controller::InitAssets, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 126
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitAssets@Controller@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 300				; 0000012cH
	call	?SetGD@BaseMesh@@QAEXAAVGraphicsDevice@@@Z ; BaseMesh::SetGD
; Line 129
	push	OFFSET ??_C@_07EHHHOIHI@Verdana@
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	700					; 000002bcH
	push	20					; 00000014H
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?Init@D3D9Font@@QAEXAAVGraphicsDevice@@ABVString@@HH@Z ; D3D9Font::Init
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 130
	push	OFFSET ??_C@_0BG@HFPCFDKL@Assets?2NormalColor?4ps@
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 272				; 00000110H
	call	?Init@D3D9PixelShader@@QAEXAAVGraphicsDevice@@ABVString@@@Z ; D3D9PixelShader::Init
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 131
	push	OFFSET ??_C@_0BG@HBHPCPBJ@Assets?2NormalColor?4vs@
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 236				; 000000ecH
	call	?Init@D3D9VertexShader@@QAEXAAVGraphicsDevice@@ABVString@@@Z ; D3D9VertexShader::Init
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 204				; 000000ccH
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z ; Vector<GraphicsAsset *>::PushEnd
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 272				; 00000110H
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z ; Vector<GraphicsAsset *>::PushEnd
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 236				; 000000ecH
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?PushEnd@?$Vector@PAVGraphicsAsset@@@@QAEXABQAVGraphicsAsset@@@Z ; Vector<GraphicsAsset *>::PushEnd
; Line 137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReloadTextures@Controller@@AAEXXZ	; Controller::ReloadTextures
; Line 138
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitAssets@Controller@@AAEXXZ$0:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?InitAssets@Controller@@AAEXXZ$1:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?InitAssets@Controller@@AAEXXZ$2:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?InitAssets@Controller@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitAssets@Controller@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitAssets@Controller@@AAEXXZ ENDP			; Controller::InitAssets
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InitMenu@Controller@@AAEXXZ
_TEXT	SEGMENT
$T2 = -264						; size = 12
$T3 = -244						; size = 12
_FileMenu$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InitMenu@Controller@@AAEXXZ PROC			; Controller::InitMenu, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 40
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitMenu@Controller@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@MenuInterface@@QAEXAAVApplicationWindow@@@Z ; MenuInterface::Init
; Line 43
	push	OFFSET ??_C@_04PBAHLACE@File@
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 48					; 00000030H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?MenuBar@MenuInterface@@QAEAAVMenu@@XZ	; MenuInterface::MenuBar
	mov	ecx, eax
	call	?AddSubMenu@Menu@@QAEAAV1@AAVApplicationWindow@@IABVString@@@Z ; Menu::AddSubMenu
	mov	DWORD PTR _FileMenu$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 44
	push	OFFSET ??_C@_0M@LDHJGJDJ@Quit?7Ctrl?$CLQ@
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 48					; 00000030H
	push	edx
	mov	ecx, DWORD PTR _FileMenu$[ebp]
	call	?AddString@Menu@@QAEXAAVApplicationWindow@@IABVString@@@Z ; Menu::AddString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1String@@QAE@XZ			; String::~String
; Line 45
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitMenu@Controller@@AAEXXZ$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?InitMenu@Controller@@AAEXXZ$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?InitMenu@Controller@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitMenu@Controller@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitMenu@Controller@@AAEXXZ ENDP			; Controller::InitMenu
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Frame@Controller@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Frame@Controller@@QAEXXZ PROC				; Controller::Frame, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ProcessKeyboardInput@Controller@@AAEXXZ ; Controller::ProcessKeyboardInput
; Line 204
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ProcessEvents@Controller@@AAEXXZ	; Controller::ProcessEvents
; Line 206
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateCamera@Controller@@AAEXXZ	; Controller::UpdateCamera
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Render@Controller@@AAEXXZ		; Controller::Render
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StatusText@Controller@@AAEXXZ		; Controller::StatusText
; Line 211
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Frame@Controller@@QAEXXZ ENDP				; Controller::Frame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ResetAssets@Controller@@UAEXXZ
_TEXT	SEGMENT
tv75 = -220						; size = 4
_assetIndex$1 = -20					; size = 4
_this$ = -8						; size = 4
?ResetAssets@Controller@@UAEXXZ PROC			; Controller::ResetAssets, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	DWORD PTR _assetIndex$1[ebp], 0
	jmp	SHORT $LN4@ResetAsset
$LN2@ResetAsset:
	mov	eax, DWORD PTR _assetIndex$1[ebp]
	add	eax, 1
	mov	DWORD PTR _assetIndex$1[ebp], eax
$LN4@ResetAsset:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Length@?$Vector@PAVGraphicsAsset@@@@QBEIXZ ; Vector<GraphicsAsset *>::Length
	cmp	DWORD PTR _assetIndex$1[ebp], eax
	jae	SHORT $LN3@ResetAsset
; Line 83
	mov	eax, DWORD PTR _assetIndex$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??A?$Vector@PAVGraphicsAsset@@@@QAEAAPAVGraphicsAsset@@I@Z ; Vector<GraphicsAsset *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 84
	jmp	SHORT $LN2@ResetAsset
$LN3@ResetAsset:
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReloadTextures@Controller@@AAEXXZ	; Controller::ReloadTextures
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetAssets@Controller@@UAEXXZ ENDP			; Controller::ResetAssets
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAssets@Controller@@UAEXXZ
_TEXT	SEGMENT
tv75 = -220						; size = 4
_assetIndex$1 = -20					; size = 4
_this$ = -8						; size = 4
?ReleaseAssets@Controller@@UAEXXZ PROC			; Controller::ReleaseAssets, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	DWORD PTR _assetIndex$1[ebp], 0
	jmp	SHORT $LN4@ReleaseAss
$LN2@ReleaseAss:
	mov	eax, DWORD PTR _assetIndex$1[ebp]
	add	eax, 1
	mov	DWORD PTR _assetIndex$1[ebp], eax
$LN4@ReleaseAss:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Length@?$Vector@PAVGraphicsAsset@@@@QBEIXZ ; Vector<GraphicsAsset *>::Length
	cmp	DWORD PTR _assetIndex$1[ebp], eax
	jae	SHORT $LN1@ReleaseAss
; Line 75
	mov	eax, DWORD PTR _assetIndex$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??A?$Vector@PAVGraphicsAsset@@@@QAEAAPAVGraphicsAsset@@I@Z ; Vector<GraphicsAsset *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 76
	jmp	SHORT $LN2@ReleaseAss
$LN1@ReleaseAss:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReleaseAssets@Controller@@UAEXXZ ENDP			; Controller::ReleaseAssets
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReSize@Controller@@QAEXXZ
_TEXT	SEGMENT
$T1 = -276						; size = 64
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?ReSize@Controller@@QAEXXZ PROC				; Controller::ReSize, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	push	ecx
	movss	xmm0, DWORD PTR __real@43480000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 48					; 00000030H
	call	?AspectRatio@ApplicationWindow@@QAEMXZ	; ApplicationWindow::AspectRatio
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR __real@3f860a92
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?PerspectiveFov@Matrix4@@SA?AV1@MMMM@Z	; Matrix4::PerspectiveFov
	add	esp, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Matrix4@@QAEAAV0@ABV0@@Z		; Matrix4::operator=
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReSize@Controller@@QAEXXZ ENDP				; Controller::ReSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeMemory@Controller@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FreeMemory@Controller@@QAEXXZ PROC			; Controller::FreeMemory, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeMemory@Controller@@QAEXXZ ENDP			; Controller::FreeMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init3D@Controller@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Init3D@Controller@@QAEXXZ PROC				; Controller::Init3D, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitAssets@Controller@@AAEXXZ		; Controller::InitAssets
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetCamera@Controller@@AAEXXZ		; Controller::ResetCamera
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 2
; Line 118
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+332], OFFSET ?SphereFunction@@YAMABUVec3f@@@Z ; SphereFunction
; Line 119
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+332], OFFSET ?RandomFunction@@YAMABUVec3f@@@Z ; RandomFunction
; Line 120
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+332], OFFSET ?CrazyFunction@@YAMABUVec3f@@@Z ; CrazyFunction
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateIsoSurface@Controller@@AAEXXZ	; Controller::UpdateIsoSurface
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init3D@Controller@@QAEXXZ ENDP				; Controller::Init3D
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init@Controller@@QAEXAAUAppState@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
?Init@Controller@@QAEXAAUAppState@@@Z PROC		; Controller::Init, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 107
	mov	esi, esp
	call	DWORD PTR __imp__AllocConsole@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitMenu@Controller@@AAEXXZ		; Controller::InitMenu
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@Controller@@QAEXAAUAppState@@@Z ENDP		; Controller::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1IsoSurface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IsoSurface@@QAE@XZ PROC				; IsoSurface::~IsoSurface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$Vector@UTriMeshFace@@@@QAE@XZ	; Vector<TriMeshFace>::~Vector<TriMeshFace>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1?$Vector@UVec3f@@@@QAE@XZ		; Vector<Vec3f>::~Vector<Vec3f>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1IsoSurface@@QAE@XZ ENDP				; IsoSurface::~IsoSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Vector@UTriMeshFace@@@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Vector@UTriMeshFace@@@@QAE@XZ PROC			; Vector<TriMeshFace>::~Vector<TriMeshFace>, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Vector
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN3@Vector:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Vector@UTriMeshFace@@@@QAE@XZ ENDP			; Vector<TriMeshFace>::~Vector<TriMeshFace>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Vector@UVec3f@@@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$Vector@UVec3f@@@@QAE@XZ PROC			; Vector<Vec3f>::~Vector<Vec3f>, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Vector
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN3@Vector:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Vector@UVec3f@@@@QAE@XZ ENDP			; Vector<Vec3f>::~Vector<Vec3f>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RemoveSlow@?$Vector@UInputEvent@@@@QAEXI@Z
_TEXT	SEGMENT
tv67 = -217						; size = 1
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
_Index$ = 8						; size = 4
?RemoveSlow@?$Vector@UInputEvent@@@@QAEXI@Z PROC	; Vector<InputEvent>::RemoveSlow, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.cpp
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN6@RemoveSlow
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN7@RemoveSlow
$LN6@RemoveSlow:
	mov	BYTE PTR tv67[ebp], 0
$LN7@RemoveSlow:
	push	OFFSET ??_C@_0BP@NEAPEIHG@Remove?5called?5on?5invalid?5index@
	movzx	edx, BYTE PTR tv67[ebp]
	push	edx
	call	?Assert@@YAX_NPBD@Z			; Assert
	add	esp, 8
; Line 142
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _i$1[ebp], eax
	jmp	SHORT $LN4@RemoveSlow
$LN2@RemoveSlow:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@RemoveSlow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	cmp	DWORD PTR _i$1[ebp], ecx
	jae	SHORT $LN3@RemoveSlow
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR [ecx+edx*8+8]
	mov	ecx, DWORD PTR [ecx+edx*8+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	esi, DWORD PTR _i$1[ebp]
	mov	DWORD PTR [edx+esi*8], eax
	mov	DWORD PTR [edx+esi*8+4], ecx
; Line 145
	jmp	SHORT $LN2@RemoveSlow
$LN3@RemoveSlow:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveSlow@?$Vector@UInputEvent@@@@QAEXI@Z ENDP	; Vector<InputEvent>::RemoveSlow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopFront@?$Vector@UInputEvent@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?PopFront@?$Vector@UInputEvent@@@@QAEXXZ PROC		; Vector<InputEvent>::PopFront, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.cpp
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveSlow@?$Vector@UInputEvent@@@@QAEXI@Z ; Vector<InputEvent>::RemoveSlow
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PopFront@?$Vector@UInputEvent@@@@QAEXXZ ENDP		; Vector<InputEvent>::PopFront
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?First@?$Vector@UInputEvent@@@@QAEAAUInputEvent@@XZ
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
?First@?$Vector@UInputEvent@@@@QAEAAUInputEvent@@XZ PROC ; Vector<InputEvent>::First, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jbe	SHORT $LN3@First
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@First
$LN3@First:
	mov	BYTE PTR tv67[ebp], 0
$LN4@First:
	push	OFFSET ??_C@_0BO@LAHPIJGE@First?5called?5with?5no?5elements@
	movzx	ecx, BYTE PTR tv67[ebp]
	push	ecx
	call	?Assert@@YAX_NPBD@Z			; Assert
	add	esp, 8
; Line 320
	mov	eax, 8
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
; Line 321
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?First@?$Vector@UInputEvent@@@@QAEAAUInputEvent@@XZ ENDP ; Vector<InputEvent>::First
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Length@?$Vector@UInputEvent@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Length@?$Vector@UInputEvent@@@@QBEIXZ PROC		; Vector<InputEvent>::Length, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@?$Vector@UInputEvent@@@@QBEIXZ ENDP		; Vector<InputEvent>::Length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopEvent@InputManager@@QAE?AUInputEvent@@XZ
_TEXT	SEGMENT
_Result$ = -24						; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?PopEvent@InputManager@@QAE?AUInputEvent@@XZ PROC	; InputManager::PopEvent, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Windows Controller\InputManager.h
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	?First@?$Vector@UInputEvent@@@@QAEAAUInputEvent@@XZ ; Vector<InputEvent>::First
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _Result$[ebp], ecx
	mov	DWORD PTR _Result$[ebp+4], edx
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopFront@?$Vector@UInputEvent@@@@QAEXXZ ; Vector<InputEvent>::PopFront
; Line 123
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _Result$[ebp]
	mov	edx, DWORD PTR _Result$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 124
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PopEvent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@PopEvent:
	DD	1
	DD	$LN4@PopEvent
$LN4@PopEvent:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@PopEvent
$LN3@PopEvent:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PopEvent@InputManager@@QAE?AUInputEvent@@XZ ENDP	; InputManager::PopEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EventPresent@InputManager@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?EventPresent@InputManager@@QBE_NXZ PROC		; InputManager::EventPresent, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Windows Controller\InputManager.h
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length@?$Vector@UInputEvent@@@@QBEIXZ	; Vector<InputEvent>::Length
	test	eax, eax
	jbe	SHORT $LN3@EventPrese
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@EventPrese
$LN3@EventPrese:
	mov	DWORD PTR tv68[ebp], 0
$LN4@EventPrese:
	mov	al, BYTE PTR tv68[ebp]
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?EventPresent@InputManager@@QBE_NXZ ENDP		; InputManager::EventPresent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?KeyCheckOnce@InputManager@@QAE_NI@Z
_TEXT	SEGMENT
tv66 = -217						; size = 1
_Ret$ = -17						; size = 1
_this$ = -8						; size = 4
_Key$ = 8						; size = 4
?KeyCheckOnce@InputManager@@QAE_NI@Z PROC		; InputManager::KeyCheckOnce, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Windows Controller\InputManager.h
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	cmp	DWORD PTR _Key$[ebp], 256		; 00000100H
	jae	SHORT $LN3@KeyCheckOn
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@KeyCheckOn
$LN3@KeyCheckOn:
	mov	BYTE PTR tv66[ebp], 0
$LN4@KeyCheckOn:
	push	OFFSET ??_C@_0M@MAFAMAL@Invalid?5key@
	movzx	eax, BYTE PTR tv66[ebp]
	push	eax
	call	?Assert@@YAX_NPBD@Z			; Assert
	add	esp, 8
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _Key$[ebp]
	mov	cl, BYTE PTR [eax+12]
	mov	BYTE PTR _Ret$[ebp], cl
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _Key$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 80
	mov	al, BYTE PTR _Ret$[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?KeyCheckOnce@InputManager@@QAE_NI@Z ENDP		; InputManager::KeyCheckOnce
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MenuBar@MenuInterface@@QAEAAVMenu@@XZ
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
?MenuBar@MenuInterface@@QAEAAVMenu@@XZ PROC		; MenuInterface::MenuBar, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Utility\MenuInterface.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@MenuBar
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@MenuBar
$LN3@MenuBar:
	mov	BYTE PTR tv67[ebp], 0
$LN4@MenuBar:
	push	OFFSET ??_C@_0BH@EBGNBOLA@Menu?5bar?5uninitialized@
	movzx	ecx, BYTE PTR tv67[ebp]
	push	ecx
	call	?Assert@@YAX_NPBD@Z			; Assert
	add	esp, 8
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MenuBar@MenuInterface@@QAEAAVMenu@@XZ ENDP		; MenuInterface::MenuBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SPF@FrameTimer@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SPF@FrameTimer@@QAEMXZ PROC				; FrameTimer::SPF, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Utility\FrameTimer.h
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+12]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SPF@FrameTimer@@QAEMXZ ENDP				; FrameTimer::SPF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FPS@FrameTimer@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FPS@FrameTimer@@QAEMXZ PROC				; FrameTimer::FPS, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Utility\FrameTimer.h
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FPS@FrameTimer@@QAEMXZ ENDP				; FrameTimer::FPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z
_TEXT	SEGMENT
tv147 = -436						; size = 4
tv150 = -432						; size = 4
tv145 = -428						; size = 4
tv149 = -424						; size = 4
tv143 = -420						; size = 4
tv148 = -416						; size = 4
tv141 = -412						; size = 4
tv89 = -408						; size = 4
$T2 = -400						; size = 12
$T3 = -380						; size = 12
$T4 = -360						; size = 12
$T5 = -340						; size = 12
$T6 = -320						; size = 12
_hr$7 = -108						; size = 4
_DM$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_Name$ = 8						; size = 4
_M$ = 12						; size = 4
?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z PROC	; D3D9VertexShader::SetMatrix, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\D3D9 Objects\D3D9VertexShader.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 424				; 000001a8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 25
	lea	eax, DWORD PTR _DM$[ebp]
	push	eax
	mov	ecx, DWORD PTR _M$[ebp]
	call	??BMatrix4@@QBE?AUD3DXMATRIX@@XZ	; Matrix4::operator D3DXMATRIX
; Line 26
	mov	esi, esp
	lea	eax, DWORD PTR _DM$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$7[ebp], eax
	cmp	DWORD PTR _hr$7[ebp], 0
	jge	$LN1@SetMatrix
	cmp	DWORD PTR _hr$7[ebp], -2005530516	; 8876086cH
	je	$LN1@SetMatrix
	push	OFFSET ??_C@_09PLEIBEEM@SetMatrix@
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_0DG@DCLAMPEF@?5has?5unexpectedly?5failed?$DL?5the?5p@
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR tv141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	push	OFFSET ??_C@_0O@NLJFDGCI@The?5function?5@
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv143[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv149[ebp], eax
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv145[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??H@YA?AVString@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	call	?SignalError@@YAXABVString@@@Z		; SignalError
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1String@@QAE@XZ			; String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1String@@QAE@XZ			; String::~String
$LN1@SetMatrix:
; Line 27
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@SetMatrix
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN12@SetMatrix:
	DD	1
	DD	$LN11@SetMatrix
$LN11@SetMatrix:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN9@SetMatrix
$LN9@SetMatrix:
	DB	68					; 00000044H
	DB	77					; 0000004dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$0:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$1:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$2:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$3:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z$4:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-440]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetMatrix@D3D9VertexShader@@QAEXPBDABVMatrix4@@@Z ENDP	; D3D9VertexShader::SetMatrix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Matrix@Camera@@QAEAAVMatrix4@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Matrix@Camera@@QAEAAVMatrix4@@XZ PROC			; Camera::Matrix, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Graphics Objects\Camera.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Matrix@Camera@@QAEAAVMatrix4@@XZ ENDP			; Camera::Matrix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0String@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Text$ = 8						; size = 4
??0String@@QAE@PBD@Z PROC				; String::String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 110
	mov	eax, DWORD PTR _Text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4String@@QAEAAV0@PBD@Z		; String::operator=
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0String@@QAE@PBD@Z ENDP				; String::String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0String@@QAE@M@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??0String@@QAE@M@Z PROC					; String::String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 96
	push	ecx
	movss	xmm0, DWORD PTR _Value$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4String@@QAEAAV0@M@Z			; String::operator=
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0String@@QAE@M@Z ENDP					; String::String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0String@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Value$ = 8						; size = 4
??0String@@QAE@I@Z PROC					; String::String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 68
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4String@@QAEAAV0@I@Z			; String::operator=
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0String@@QAE@I@Z ENDP					; String::String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1String@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1String@@QAE@XZ PROC					; String::~String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@String
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN3@String:
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1String@@QAE@XZ ENDP					; String::~String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??D@YA?AUVec3f@@ABU0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_Left$ = 12						; size = 4
_Right$ = 16						; size = 4
??D@YA?AUVec3f@@ABU0@M@Z PROC				; operator*, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Math\Vec3f.inl
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 275
	mov	eax, DWORD PTR _Left$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _Right$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Left$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _Right$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _Left$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _Right$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vec3f@@QAE@MMM@Z			; Vec3f::Vec3f
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AUVec3f@@ABU0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Length@Vec3f@@QBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Length@Vec3f@@QBEMXZ PROC				; Vec3f::Length, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Math\Vec3f.inl
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	add	esp, 4
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Vec3f@@QBEMXZ ENDP				; Vec3f::Length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Vec3f@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0Vec3f@@QAE@MMM@Z PROC				; Vec3f::Vec3f, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Math\Vec3f.inl
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __x$[ebp]
	movss	DWORD PTR [eax], xmm0
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Vec3f@@QAE@MMM@Z ENDP				; Vec3f::Vec3f
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Vec2i@@QAE@HI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0Vec2i@@QAE@HI@Z PROC					; Vec2i::Vec2i, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Math\Vec2i.inl
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __y$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Vec2i@@QAE@HI@Z ENDP					; Vec2i::Vec2i
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File D:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\vcruntime_new.h
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 169
	mov	eax, DWORD PTR __Where$[ebp]
; Line 170
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -196						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; Line 757
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 758
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR tv71[ebp]
	fld	DWORD PTR tv71[ebp]
; Line 759
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -196						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	add	esp, 8
	fstp	DWORD PTR tv71[ebp]
	fld	DWORD PTR tv71[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Controller.cpp
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
