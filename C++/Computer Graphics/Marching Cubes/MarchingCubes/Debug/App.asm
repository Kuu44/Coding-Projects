; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29914.0 

	TITLE	E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\Debug\App.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??4Vec2i@@QAEAAU0@ABU0@@Z			; Vec2i::operator=
PUBLIC	??9@YA_NABUVec2i@@0@Z				; operator!=
PUBLIC	??0String@@QAE@XZ				; String::String
PUBLIC	??1String@@QAE@XZ				; String::~String
PUBLIC	??0String@@QAE@PBD@Z				; String::String
PUBLIC	??0GraphicsDeviceParameters@@QAE@XZ		; GraphicsDeviceParameters::GraphicsDeviceParameters
PUBLIC	??1GraphicsDeviceParameters@@QAE@XZ		; GraphicsDeviceParameters::~GraphicsDeviceParameters
PUBLIC	??0GraphicsDeviceCallbacks@@QAE@XZ		; GraphicsDeviceCallbacks::GraphicsDeviceCallbacks
PUBLIC	??0MenuInterface@@QAE@XZ			; MenuInterface::MenuInterface
PUBLIC	??0AppAssets@@QAE@XZ				; AppAssets::AppAssets
PUBLIC	??1AppAssets@@QAE@XZ				; AppAssets::~AppAssets
PUBLIC	??0?$Vector@PAVGraphicsAsset@@@@QAE@XZ		; Vector<GraphicsAsset *>::Vector<GraphicsAsset *>
PUBLIC	??0Controller@@QAE@XZ				; Controller::Controller
PUBLIC	?FreeMemory@App@@QAEXXZ				; App::FreeMemory
PUBLIC	?Init@App@@QAEXPAUHINSTANCE__@@H@Z		; App::Init
PUBLIC	?MessageLoop@App@@QAEXPAUHINSTANCE__@@H@Z	; App::MessageLoop
PUBLIC	?RenderFrame@App@@QAEXXZ			; App::RenderFrame
PUBLIC	??_7GraphicsDeviceCallbacks@@6B@		; GraphicsDeviceCallbacks::`vftable'
PUBLIC	??_7Controller@@6B@				; Controller::`vftable'
PUBLIC	??_C@_07EHHHOIHI@Verdana@			; `string'
PUBLIC	??_C@_08FLCIANHI@BaseCode@			; `string'
PUBLIC	??_C@_0BN@DODMADFK@Invalid?5graphics?5device?5type@ ; `string'
PUBLIC	??_C@_0CD@MBLHAGN@Failed?5to?5allocate?5graphics?5dev@ ; `string'
PUBLIC	??_R4GraphicsDeviceCallbacks@@6B@		; GraphicsDeviceCallbacks::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGraphicsDeviceCallbacks@@@8		; GraphicsDeviceCallbacks `RTTI Type Descriptor'
PUBLIC	??_R3GraphicsDeviceCallbacks@@8			; GraphicsDeviceCallbacks::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GraphicsDeviceCallbacks@@8			; GraphicsDeviceCallbacks::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GraphicsDeviceCallbacks@@8	; GraphicsDeviceCallbacks::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Controller@@6B@				; Controller::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVController@@@8				; Controller `RTTI Type Descriptor'
PUBLIC	??_R3Controller@@8				; Controller::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Controller@@8				; Controller::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Controller@@8			; Controller::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@42700000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	?Assert@@YAX_NPBD@Z:PROC			; Assert
EXTRN	??0RGBColor@@QAE@XZ:PROC			; RGBColor::RGBColor
EXTRN	??4String@@QAEAAV0@PBD@Z:PROC			; String::operator=
EXTRN	??4String@@QAEAAV0@ABV0@@Z:PROC			; String::operator=
EXTRN	??0Matrix4@@QAE@XZ:PROC				; Matrix4::Matrix4
EXTRN	??0Camera@@QAE@XZ:PROC				; Camera::Camera
EXTRN	??0D3D9Mesh@@QAE@XZ:PROC			; D3D9Mesh::D3D9Mesh
EXTRN	??1D3D9Mesh@@QAE@XZ:PROC			; D3D9Mesh::~D3D9Mesh
EXTRN	??0D3D9PixelShader@@QAE@XZ:PROC			; D3D9PixelShader::D3D9PixelShader
EXTRN	??1D3D9PixelShader@@QAE@XZ:PROC			; D3D9PixelShader::~D3D9PixelShader
EXTRN	??0D3D9VertexShader@@QAE@XZ:PROC		; D3D9VertexShader::D3D9VertexShader
EXTRN	??1D3D9VertexShader@@QAE@XZ:PROC		; D3D9VertexShader::~D3D9VertexShader
EXTRN	??0D3D9Font@@QAE@XZ:PROC			; D3D9Font::D3D9Font
EXTRN	??1D3D9Font@@QAE@XZ:PROC			; D3D9Font::~D3D9Font
EXTRN	??0D3D9GraphicsDevice@@QAE@XZ:PROC		; D3D9GraphicsDevice::D3D9GraphicsDevice
EXTRN	?Start@FrameTimer@@QAEXM@Z:PROC			; FrameTimer::Start
EXTRN	?Frame@FrameTimer@@QAEXXZ:PROC			; FrameTimer::Frame
EXTRN	?Pause@FrameTimer@@QAEXXZ:PROC			; FrameTimer::Pause
EXTRN	?Frame@InputManager@@QAEXXZ:PROC		; InputManager::Frame
EXTRN	?FreeMemory@ApplicationWindow@@QAEXXZ:PROC	; ApplicationWindow::FreeMemory
EXTRN	?InitAll@ApplicationWindow@@QAEXPAUHINSTANCE__@@H_NHHABVString@@@Z:PROC ; ApplicationWindow::InitAll
EXTRN	?Dimensions@ApplicationWindow@@QAE?AUVec2i@@XZ:PROC ; ApplicationWindow::Dimensions
EXTRN	?Init@Controller@@QAEXAAUAppState@@@Z:PROC	; Controller::Init
EXTRN	?Init3D@Controller@@QAEXXZ:PROC			; Controller::Init3D
EXTRN	?FreeMemory@Controller@@QAEXXZ:PROC		; Controller::FreeMemory
EXTRN	?ReSize@Controller@@QAEXXZ:PROC			; Controller::ReSize
EXTRN	?ReleaseAssets@Controller@@UAEXXZ:PROC		; Controller::ReleaseAssets
EXTRN	?ResetAssets@Controller@@UAEXXZ:PROC		; Controller::ResetAssets
EXTRN	?Frame@Controller@@QAEXXZ:PROC			; Controller::Frame
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Black@RGBColor@@2U1@B:DWORD			; RGBColor::Black
EXTRN	?g_WndProcContext@@3PAVInputManager@@A:DWORD	; g_WndProcContext
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?FontName@@3VString@@B DB 0cH DUP (?)			; FontName
_BSS	ENDS
CRT$XCU	SEGMENT
?FontName$initializer$@@3P6AXXZA DD FLAT:??__EFontName@@YAXXZ ; FontName$initializer$
CRT$XCU	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@Controller@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Controller@@8 DD FLAT:??_R0?AVController@@@8 ; Controller::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Controller@@8
rdata$r	ENDS
;	COMDAT ??_R2Controller@@8
rdata$r	SEGMENT
??_R2Controller@@8 DD FLAT:??_R1A@?0A@EA@Controller@@8	; Controller::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GraphicsDeviceCallbacks@@8
rdata$r	ENDS
;	COMDAT ??_R3Controller@@8
rdata$r	SEGMENT
??_R3Controller@@8 DD 00H				; Controller::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Controller@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVController@@@8
data$rs	SEGMENT
??_R0?AVController@@@8 DD FLAT:??_7type_info@@6B@	; Controller `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVController@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Controller@@6B@
rdata$r	SEGMENT
??_R4Controller@@6B@ DD 00H				; Controller::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVController@@@8
	DD	FLAT:??_R3Controller@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GraphicsDeviceCallbacks@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GraphicsDeviceCallbacks@@8 DD FLAT:??_R0?AVGraphicsDeviceCallbacks@@@8 ; GraphicsDeviceCallbacks::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GraphicsDeviceCallbacks@@8
rdata$r	ENDS
;	COMDAT ??_R2GraphicsDeviceCallbacks@@8
rdata$r	SEGMENT
??_R2GraphicsDeviceCallbacks@@8 DD FLAT:??_R1A@?0A@EA@GraphicsDeviceCallbacks@@8 ; GraphicsDeviceCallbacks::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3GraphicsDeviceCallbacks@@8
rdata$r	SEGMENT
??_R3GraphicsDeviceCallbacks@@8 DD 00H			; GraphicsDeviceCallbacks::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GraphicsDeviceCallbacks@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGraphicsDeviceCallbacks@@@8
data$rs	SEGMENT
??_R0?AVGraphicsDeviceCallbacks@@@8 DD FLAT:??_7type_info@@6B@ ; GraphicsDeviceCallbacks `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGraphicsDeviceCallbacks@@', 00H
data$rs	ENDS
;	COMDAT ??_R4GraphicsDeviceCallbacks@@6B@
rdata$r	SEGMENT
??_R4GraphicsDeviceCallbacks@@6B@ DD 00H		; GraphicsDeviceCallbacks::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGraphicsDeviceCallbacks@@@8
	DD	FLAT:??_R3GraphicsDeviceCallbacks@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CD@MBLHAGN@Failed?5to?5allocate?5graphics?5dev@
CONST	SEGMENT
??_C@_0CD@MBLHAGN@Failed?5to?5allocate?5graphics?5dev@ DB 'Failed to allo'
	DB	'cate graphics device', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DODMADFK@Invalid?5graphics?5device?5type@
CONST	SEGMENT
??_C@_0BN@DODMADFK@Invalid?5graphics?5device?5type@ DB 'Invalid graphics '
	DB	'device type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLCIANHI@BaseCode@
CONST	SEGMENT
??_C@_08FLCIANHI@BaseCode@ DB 'BaseCode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EHHHOIHI@Verdana@
CONST	SEGMENT
??_C@_07EHHHOIHI@Verdana@ DB 'Verdana', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7Controller@@6B@
CONST	SEGMENT
??_7Controller@@6B@ DD FLAT:??_R4Controller@@6B@	; Controller::`vftable'
	DD	FLAT:?ReleaseAssets@Controller@@UAEXXZ
	DD	FLAT:?ResetAssets@Controller@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7GraphicsDeviceCallbacks@@6B@
CONST	SEGMENT
??_7GraphicsDeviceCallbacks@@6B@ DD FLAT:??_R4GraphicsDeviceCallbacks@@6B@ ; GraphicsDeviceCallbacks::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Init@App@@QAEXPAUHINSTANCE__@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$3
__ehfuncinfo$?Init@App@@QAEXPAUHINSTANCE__@@H@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Init@App@@QAEXPAUHINSTANCE__@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Controller@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Controller@@QAE@XZ$0
__ehfuncinfo$??0Controller@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Controller@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AppAssets@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AppAssets@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AppAssets@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0AppAssets@@QAE@XZ$2
__ehfuncinfo$??0AppAssets@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0AppAssets@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0GraphicsDeviceParameters@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0GraphicsDeviceParameters@@QAE@XZ$0
__ehfuncinfo$??0GraphicsDeviceParameters@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0GraphicsDeviceParameters@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FFontName@@YAXXZ
text$yd	SEGMENT
??__FFontName@@YAXXZ PROC				; `dynamic atexit destructor for 'FontName'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?FontName@@3VString@@B
	call	??1String@@QAE@XZ			; String::~String
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FFontName@@YAXXZ ENDP				; `dynamic atexit destructor for 'FontName''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EFontName@@YAXXZ
text$di	SEGMENT
??__EFontName@@YAXXZ PROC				; `dynamic initializer for 'FontName'', COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??_C@_07EHHHOIHI@Verdana@
	mov	ecx, OFFSET ?FontName@@3VString@@B
	call	??0String@@QAE@PBD@Z			; String::String
	push	OFFSET ??__FFontName@@YAXXZ		; `dynamic atexit destructor for 'FontName''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EFontName@@YAXXZ ENDP				; `dynamic initializer for 'FontName''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderFrame@App@@QAEXXZ
_TEXT	SEGMENT
_active$ = -33						; size = 1
_curDimensions$ = -24					; size = 8
_this$ = -8						; size = 4
?RenderFrame@App@@QAEXXZ PROC				; App::RenderFrame, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	?Frame@InputManager@@QAEXXZ		; InputManager::Frame
; Line 66
	lea	eax, DWORD PTR _curDimensions$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Dimensions@ApplicationWindow@@QAE?AUVec2i@@XZ ; ApplicationWindow::Dimensions
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	lea	ecx, DWORD PTR _curDimensions$[ebp]
	push	ecx
	call	??9@YA_NABUVec2i@@0@Z			; operator!=
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@RenderFram
; Line 69
	lea	eax, DWORD PTR _curDimensions$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4Vec2i@@QAEAAU0@ABU0@@Z		; Vec2i::operator=
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	call	?ReSize@Controller@@QAEXXZ		; Controller::ReSize
; Line 72
	jmp	SHORT $LN1@RenderFram
$LN2@RenderFram:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _active$[ebp], al
; Line 77
	movzx	eax, BYTE PTR _active$[ebp]
	test	eax, eax
	je	SHORT $LN3@RenderFram
; Line 79
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Frame@FrameTimer@@QAEXXZ		; FrameTimer::Frame
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	call	?Frame@Controller@@QAEXXZ		; Controller::Frame
; Line 81
	jmp	SHORT $LN4@RenderFram
$LN3@RenderFram:
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Pause@FrameTimer@@QAEXXZ		; FrameTimer::Pause
$LN4@RenderFram:
; Line 87
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@RenderFram:
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@RenderFram
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@RenderFram:
	DD	1
	DD	$LN7@RenderFram
$LN7@RenderFram:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN6@RenderFram
$LN6@RenderFram:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
?RenderFrame@App@@QAEXXZ ENDP				; App::RenderFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MessageLoop@App@@QAEXPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT
_bGotMsg$ = -56						; size = 4
_msg$ = -44						; size = 28
_this$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nCmdShow$ = 12						; size = 4
?MessageLoop@App@@QAEXPAUHINSTANCE__@@H@Z PROC		; App::MessageLoop, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__PeekMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@MessageLoo:
; Line 96
	cmp	DWORD PTR _msg$[ebp+4], 18		; 00000012H
	je	SHORT $LN1@MessageLoo
; Line 98
	mov	esi, esp
	push	1
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__PeekMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bGotMsg$[ebp], eax
; Line 99
	cmp	DWORD PTR _bGotMsg$[ebp], 0
	je	SHORT $LN4@MessageLoo
; Line 101
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 103
	jmp	SHORT $LN5@MessageLoo
$LN4@MessageLoo:
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RenderFrame@App@@QAEXXZ		; App::RenderFrame
$LN5@MessageLoo:
; Line 111
	jmp	SHORT $LN2@MessageLoo
$LN1@MessageLoo:
; Line 112
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@MessageLoo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN9@MessageLoo:
	DD	1
	DD	$LN8@MessageLoo
$LN8@MessageLoo:
	DD	-44					; ffffffd4H
	DD	28					; 0000001cH
	DD	$LN7@MessageLoo
$LN7@MessageLoo:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?MessageLoop@App@@QAEXPAUHINSTANCE__@@H@Z ENDP		; App::MessageLoop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Init@App@@QAEXPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT
tv151 = -332						; size = 4
tv87 = -332						; size = 4
tv94 = -329						; size = 1
$T2 = -324						; size = 4
$T3 = -312						; size = 4
$T4 = -300						; size = 4
$T5 = -288						; size = 4
_parameters$ = -84					; size = 24
_$S15$ = -52						; size = 12
_windowName$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_hInstance$ = 8						; size = 4
_nCmdShow$ = 12						; size = 4
?Init@App@@QAEXPAUHINSTANCE__@@H@Z PROC			; App::Init, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Init@App@@QAEXPAUHINSTANCE__@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 28
	push	OFFSET ??_C@_08FLCIANHI@BaseCode@
	lea	ecx, DWORD PTR _$S15$[ebp]
	call	??0String@@QAE@PBD@Z			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR _$S15$[ebp]
	mov	DWORD PTR _windowName$[ebp], eax
; Line 34
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Init
; Line 36
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN5@Init
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0D3D9GraphicsDevice@@QAE@XZ		; D3D9GraphicsDevice::D3D9GraphicsDevice
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN6@Init
$LN5@Init:
	mov	DWORD PTR tv87[ebp], 0
$LN6@Init:
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx], edx
; Line 37
	jmp	SHORT $LN3@Init
$LN2@Init:
; Line 41
	push	OFFSET ??_C@_0BN@DODMADFK@Invalid?5graphics?5device?5type@
	push	0
	call	?Assert@@YAX_NPBD@Z			; Assert
	add	esp, 8
$LN3@Init:
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN7@Init
	mov	BYTE PTR tv94[ebp], 1
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	BYTE PTR tv94[ebp], 0
$LN8@Init:
	push	OFFSET ??_C@_0CD@MBLHAGN@Failed?5to?5allocate?5graphics?5dev@
	movzx	ecx, BYTE PTR tv94[ebp]
	push	ecx
	call	?Assert@@YAX_NPBD@Z			; Assert
	add	esp, 8
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	mov	DWORD PTR ?g_WndProcContext@@3PAVInputManager@@A, eax ; g_WndProcContext
; Line 46
	mov	eax, DWORD PTR _windowName$[ebp]
	push	eax
	push	640					; 00000280H
	push	720					; 000002d0H
	push	0
	mov	ecx, DWORD PTR _nCmdShow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?InitAll@ApplicationWindow@@QAEXPAUHINSTANCE__@@H_NHHABVString@@@Z ; ApplicationWindow::InitAll
; Line 48
	push	348					; 0000015cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@Init
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0Controller@@QAE@XZ
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN10@Init
$LN9@Init:
	mov	DWORD PTR tv151[ebp], 0
$LN10@Init:
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+440], edx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+440]
	call	?Init@Controller@@QAEXAAUAppState@@@Z	; Controller::Init
; Line 51
	lea	ecx, DWORD PTR _parameters$[ebp]
	call	??0GraphicsDeviceParameters@@QAE@XZ	; GraphicsDeviceParameters::GraphicsDeviceParameters
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 52
	mov	BYTE PTR _parameters$[ebp+20], 1
; Line 53
	push	OFFSET ?FontName@@3VString@@B
	lea	ecx, DWORD PTR _parameters$[ebp]
	call	??4String@@QAEAAV0@ABV0@@Z		; String::operator=
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _parameters$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 56
	push	ecx
	movss	xmm0, DWORD PTR __real@42700000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Start@FrameTimer@@QAEXM@Z		; FrameTimer::Start
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Pause@FrameTimer@@QAEXXZ		; FrameTimer::Pause
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	call	?Init3D@Controller@@QAEXXZ		; Controller::Init3D
; Line 60
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _parameters$[ebp]
	call	??1GraphicsDeviceParameters@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _$S15$[ebp]
	call	??1String@@QAE@XZ			; String::~String
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN19@Init:
	DD	2
	DD	$LN18@Init
$LN18@Init:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN15@Init
	DD	-84					; ffffffacH
	DD	24					; 00000018H
	DD	$LN16@Init
$LN16@Init:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN15@Init:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	53					; 00000035H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$0:
	lea	ecx, DWORD PTR _$S15$[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$1:
	push	52					; 00000034H
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$2:
	push	348					; 0000015cH
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Init@App@@QAEXPAUHINSTANCE__@@H@Z$3:
	lea	ecx, DWORD PTR _parameters$[ebp]
	jmp	??1GraphicsDeviceParameters@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?Init@App@@QAEXPAUHINSTANCE__@@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Init@App@@QAEXPAUHINSTANCE__@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Init@App@@QAEXPAUHINSTANCE__@@H@Z ENDP			; App::Init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeMemory@App@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FreeMemory@App@@QAEXXZ PROC				; App::FreeMemory, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	call	?FreeMemory@Controller@@QAEXXZ		; Controller::FreeMemory
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?FreeMemory@ApplicationWindow@@QAEXXZ	; ApplicationWindow::FreeMemory
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeMemory@App@@QAEXXZ ENDP				; App::FreeMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Controller@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0Controller@@QAE@XZ PROC				; Controller::Controller, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Controller@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GraphicsDeviceCallbacks@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Controller@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0MenuInterface@@QAE@XZ		; MenuInterface::MenuInterface
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Matrix4@@QAE@XZ			; Matrix4::Matrix4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0Camera@@QAE@XZ			; Camera::Camera
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??0AppAssets@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??0?$Vector@PAVGraphicsAsset@@@@QAE@XZ	; Vector<GraphicsAsset *>::Vector<GraphicsAsset *>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Controller@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1AppAssets@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0Controller@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Controller@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Controller@@QAE@XZ ENDP				; Controller::Controller
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Vector@PAVGraphicsAsset@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$Vector@PAVGraphicsAsset@@@@QAE@XZ PROC		; Vector<GraphicsAsset *>::Vector<GraphicsAsset *>, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\Vector.h
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$Vector@PAVGraphicsAsset@@@@QAE@XZ ENDP		; Vector<GraphicsAsset *>::Vector<GraphicsAsset *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1AppAssets@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1AppAssets@@QAE@XZ PROC				; AppAssets::~AppAssets, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1D3D9Mesh@@QAE@XZ			; D3D9Mesh::~D3D9Mesh
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1D3D9PixelShader@@QAE@XZ		; D3D9PixelShader::~D3D9PixelShader
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1D3D9VertexShader@@QAE@XZ		; D3D9VertexShader::~D3D9VertexShader
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1D3D9Font@@QAE@XZ			; D3D9Font::~D3D9Font
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AppAssets@@QAE@XZ ENDP				; AppAssets::~AppAssets
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0AppAssets@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0AppAssets@@QAE@XZ PROC				; AppAssets::AppAssets, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AppAssets@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0D3D9Font@@QAE@XZ			; D3D9Font::D3D9Font
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0D3D9VertexShader@@QAE@XZ		; D3D9VertexShader::D3D9VertexShader
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0D3D9PixelShader@@QAE@XZ		; D3D9PixelShader::D3D9PixelShader
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0D3D9Mesh@@QAE@XZ			; D3D9Mesh::D3D9Mesh
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AppAssets@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1D3D9Font@@QAE@XZ			; D3D9Font::~D3D9Font
__unwindfunclet$??0AppAssets@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1D3D9VertexShader@@QAE@XZ		; D3D9VertexShader::~D3D9VertexShader
__unwindfunclet$??0AppAssets@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	jmp	??1D3D9PixelShader@@QAE@XZ		; D3D9PixelShader::~D3D9PixelShader
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0AppAssets@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AppAssets@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AppAssets@@QAE@XZ ENDP				; AppAssets::AppAssets
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MenuInterface@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MenuInterface@@QAE@XZ PROC				; MenuInterface::MenuInterface, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Utility\MenuInterface.h
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0MenuInterface@@QAE@XZ ENDP				; MenuInterface::MenuInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GraphicsDeviceCallbacks@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0GraphicsDeviceCallbacks@@QAE@XZ PROC			; GraphicsDeviceCallbacks::GraphicsDeviceCallbacks, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GraphicsDeviceCallbacks@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0GraphicsDeviceCallbacks@@QAE@XZ ENDP			; GraphicsDeviceCallbacks::GraphicsDeviceCallbacks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GraphicsDeviceParameters@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GraphicsDeviceParameters@@QAE@XZ PROC		; GraphicsDeviceParameters::~GraphicsDeviceParameters, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1String@@QAE@XZ			; String::~String
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GraphicsDeviceParameters@@QAE@XZ ENDP		; GraphicsDeviceParameters::~GraphicsDeviceParameters
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GraphicsDeviceParameters@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0GraphicsDeviceParameters@@QAE@XZ PROC		; GraphicsDeviceParameters::GraphicsDeviceParameters, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Graphics Devices\GraphicsDevice.h
; Line 20
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0GraphicsDeviceParameters@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0String@@QAE@XZ			; String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0RGBColor@@QAE@XZ			; RGBColor::RGBColor
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?Black@RGBColor@@2U1@B	; RGBColor::Black
	mov	DWORD PTR [eax+16], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0
; Line 25
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0GraphicsDeviceParameters@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1String@@QAE@XZ			; String::~String
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0GraphicsDeviceParameters@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0GraphicsDeviceParameters@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0GraphicsDeviceParameters@@QAE@XZ ENDP		; GraphicsDeviceParameters::GraphicsDeviceParameters
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0String@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Text$ = 8						; size = 4
??0String@@QAE@PBD@Z PROC				; String::String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 110
	mov	eax, DWORD PTR _Text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4String@@QAEAAV0@PBD@Z		; String::operator=
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0String@@QAE@PBD@Z ENDP				; String::String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1String@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1String@@QAE@XZ PROC					; String::~String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@String
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN3@String:
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1String@@QAE@XZ ENDP					; String::~String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0String@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0String@@QAE@XZ PROC					; String::String, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Core\String.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0String@@QAE@XZ ENDP					; String::String
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9@YA_NABUVec2i@@0@Z
_TEXT	SEGMENT
tv70 = -196						; size = 4
_Left$ = 8						; size = 4
_Right$ = 12						; size = 4
??9@YA_NABUVec2i@@0@Z PROC				; operator!=, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Math\Vec2i.inl
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 172
	mov	eax, DWORD PTR _Left$[ebp]
	mov	ecx, DWORD PTR _Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _Left$[ebp]
	mov	ecx, DWORD PTR _Right$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 1
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]
; Line 173
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??9@YA_NABUVec2i@@0@Z ENDP				; operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Vec2i@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_V$ = 8							; size = 4
??4Vec2i@@QAEAAU0@ABU0@@Z PROC				; Vec2i::operator=, COMDAT
; _this$ = ecx
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\Engine\Math\Vec2i.inl
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _V$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _V$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Vec2i@@QAEAAU0@ABU0@@Z ENDP				; Vec2i::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File E:\Docs\Coding_Projects\C++\Computer Graphics\Marching Cubes\MarchingCubes\App.cpp
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
